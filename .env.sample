# The base URL of this application. This is used to generate full redirect URLs for OAuth.
BASE_URL=http://localhost:8080
# Django debug setting (https://docs.djangoproject.com/en/5.1/ref/settings/#debug)
DEBUG=true
# List of administrator emails
ADMINISTRATOR_EMAILS='[]'
# Key used to encrypt/decrypt refresh tokens.
# Run cryptography.Fernet.generate_key().decode() and place it here!
REFRESH_TOKEN_KEY=
# Django secret key, used to sign secrets that Django generates (e.g. session IDs and CSRF tokens)
SECRET_KEY=extremely-insecure-key

# Allows OAuth to work over HTTP. This is insecure and should only be used for local development.
OAUTHLIB_INSECURE_TRANSPORT=1
# Allows OAuth to work with scopes that are not explicitly requested by the client.
# This is currently necessary in order to get a Refresh Token if using Microsoft Azure as a provider.
OAUTHLIB_RELAX_TOKEN_SCOPE=1
# The number of seconds before a user's session expires. Defaults to two weeks.
SESSION_COOKIE_AGE=1209600

# Galaxy/NOVA settings
VITE_DASHBOARD_TITLE="NOVA Dashboard"
# The URL of the Galaxy instance to connect to.
# VITE_GALAXY_URL exposes the URL to the front-end, which is used to build the Galaxy login URL.
GALAXY_URL=https://calvera-test.ornl.gov
VITE_GALAXY_URL=https://calvera-test.ornl.gov
# Galaxy will contain many tools that can't be run through the dashboard. Only tool IDs beginning with this prefix will appear.
TOOL_PREFIX=nova
# The URL of the changelog for the dashboard.
VITE_CHANGELOG_URL=https://code.ornl.gov/ndip/nova-dashboard/-/blob/main/CHANGELOG.md
# The alias of the Galaxy instance.
VITE_GALAXY_ALIAS=NDIP
# The alias for NOVA. Note that this won't change the attribution as that refers to the original project and funding.
VITE_NOVA_ALIAS=NOVA
VITE_NOVA_DOCS_URL=https://nova-application-development.readthedocs.io/en/latest/
VITE_NOVA_TUTORIAL_URL=https://nova.ornl.gov/tutorial
VITE_GALAXY_DOCS_URL=https://calvera.ornl.gov/docs/admin_guide/services/dashboard/
VITE_GALAXY_PROJECT_URL=https://galaxyproject.org/

# UCAMS settings
# The URL of the OAuth provider's authorization endpoint.
UCAMS_AUTH_URL=http://localhost:8082/realms/master/protocol/openid-connect/auth
# The URL of the OAuth provider's token endpoint after authentication.
UCAMS_TOKEN_URL=http://localhost:8082/realms/master/protocol/openid-connect/token
# The client ID of this application, as registered with the OAuth provider.
UCAMS_CLIENT_ID=trame-demo
# The client secret of this application, as registered with the OAuth provider.
UCAMS_CLIENT_SECRET=secret
# The path to redirect to after a successful login.
UCAMS_REDIRECT_PATH=ucams
# The scopes to request from the OAuth provider.
UCAMS_SCOPES=email profile openid offline_access User.Read

# XCAMS settings
# The URL of the OAuth provider's authorization endpoint.
XCAMS_AUTH_URL=http://localhost:8082/realms/master/protocol/openid-connect/auth
# The URL of the OAuth provider's token endpoint after authentication.
XCAMS_TOKEN_URL=http://localhost:8082/realms/master/protocol/openid-connect/token
# The client ID of this application, as registered with the OAuth provider.
XCAMS_CLIENT_ID=trame-demo
# The client secret of this application, as registered with the OAuth provider.
XCAMS_CLIENT_SECRET=secret
# The path to redirect to after a successful login.
XCAMS_REDIRECT_PATH=xcams
# The scopes to request from the OAuth provider.
XCAMS_SCOPES=email profile openid https://calvera-test.ornl.gov/api:*

# The URLS for the types of login supported in Galaxy
GALAXY_UCAMS_URL=http://localhost:8081/authnz/Keycloak/login
GALAXY_XCAMS_URL=http://localhost:8081/authnz/pingfed/login

# The URL of the Galaxy instance's endpoint for fetching a Galaxy API key.
GALAXY_API_KEY_ENDPOINT=/api/authenticate/baseauth
# The name of the Galaxy history to use when launching jobs.
GALAXY_HISTORY_NAME=launcher_history

# Status monitoring configuration
# The alert environments to display (all others will be ignored).
ALERTS_ENVIRONMENTS='["calvera", "calvera-test", "prod", "test"]'
# The alert monitoring endpoint format. prometheus is the only supported option currently.
ALERTS_FORMAT=prometheus
# The endpoint to send admins to when viewing alert details
MONITORING_URL=http://your_prometheus_server/alerts
# The endpoint for checking currently active alerts
ALERTS_URL=http://your_prometheus_server/api/v1/alerts
# The endpoint for checking all possible alerts
TARGETS_URL=http://your_prometheus_server/api/v1/targets
